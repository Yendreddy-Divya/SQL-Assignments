--51. Count the customers with rating  above San Jose’s average.

Query:
Select cnum, rating
from cust
where rating > ( select avg(rating) 
                           from cust
                           where city = 'San Jose');
--52.Obtain all orders for the customer named Cisnerous.(Assume you don’t know his customer no. (cnum)).

Output:

count(*)
0
Query:

SELECT
    O.*
FROM
    ORDERS O
JOIN
    CUST C ON O.CNUM = C.CNUM
WHERE
    C.CNAME = 'Clemens';

output:

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3008 | 4723.00 | 1994-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1994-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+

--53 Produce the names and rating of all customers who have above average orders.

Query:

SELECT c.CNAME, c.RATING
FROM CUST c
JOIN ORDERS o ON c.CNUM = o.CNUM
WHERE o.AMT > (SELECT AVG(AMT) FROM ORDERS);

Output:

+---------+--------+
| CNAME   | RATING |
+---------+--------+
| Liu     |    300 |
| Clemens |    300 |
| Clemens |    300 |
+---------+--------+

--54.Find total amount in orders for each salesperson for whom this total is greater than the amount of the largest order in the table.

Query:

SELECT s.SNAME, SUM(o.AMT) AS TotalSales
FROM SALESPEOPLE s
JOIN ORDERS o ON s.SNUM = o.SNUM
GROUP BY s.SNAME
HAVING SUM(o.AMT) > (SELECT MAX(AMT) FROM ORDERS);

Output:

+-------+------------+
| SNAME | TotalSales |
+-------+------------+
| Peel  |   15382.07 |
+-------+------------+

--55.Find all customers with order on 3rd Oct.
Query:

SELECT c.*
FROM CUST c
JOIN ORDERS o ON c.CNUM = o.CNUM
WHERE o.ODATE = '1994-10-03';

Output:

+------+---------+----------+--------+------+
| CNUM | CNAME   | CITY     | RATING | SNUM |
+------+---------+----------+--------+------+
| 2007 | Pereira | Rome     |    100 | 1004 |
| 2001 | Hoffman | London   |    100 | 1001 |
| 2003 | Liu     | San Jose |    300 | 1002 |
+------+---------+----------+--------+------+

--56.Find names and numbers of all salesperson who have more than one customer.

Query:

SELECT s.SNAME, s.SNUM
FROM SALESPEOPLE s
JOIN CUST c ON s.SNUM = c.SNUM
GROUP BY s.SNUM, s.SNAME
HAVING COUNT(c.CNUM) > 1;

Output:

+--------+------+
| SNAME  | SNUM |
+--------+------+
| Serres | 1002 |
+--------+------+

--57.Check if the correct salesperson was credited with each sale.
SELECT
    o.ONUM,
    o.SNUM AS Order_Salesperson,
    c.SNUM AS Customer_Salesperson,
    CASE
        WHEN o.SNUM = c.SNUM THEN 'Correct'
        ELSE 'Incorrect'
    END AS Credit_Check
FROM
    ORDERS o
JOIN
    CUST c ON o.CNUM = c.CNUM;

Output:

+------+-------------------+----------------------+--------------+
| ONUM | Order_Salesperson | Customer_Salesperson | Credit_Check |
+------+-------------------+----------------------+--------------+
| 3002 |              1004 |                 1004 | Correct      |
| 3003 |              1001 |                 1001 | Correct      |
| 3005 |              1002 |                 1002 | Correct      |
| 3007 |              1002 |                 1002 | Correct      |
| 3008 |              1001 |                 1007 | Incorrect    |
| 3009 |              1003 |                 1003 | Correct      |
| 3010 |              1002 |                 1002 | Correct      |
| 3011 |              1001 |                 1007 | Incorrect    |
+------+-------------------+----------------------+--------------+

--58.Find all orders with above average amounts for their customers.

Query:

SELECT o.*
FROM ORDERS o
WHERE o.AMT > (
    SELECT AVG(o2.AMT)
    FROM ORDERS o2
    WHERE o2.CNUM = o.CNUM
);

Output:

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3006 | 1098.16 | 1994-10-04 | 2008 | 1007 |
| 3010 | 1309.95 | 1994-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1994-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+

--59.Find the sums of the amounts from order table grouped by date, eliminating all those dates where the sum was not at least 2000 above the maximum amount.

Query:

SELECT
    ODATE,
    SUM(AMT) AS TotalAmount
FROM
    orders
GROUP BY
    ODATE
HAVING
    SUM(AMT) >= (SELECT MAX(AMT) FROM orders) + 2000;

Output:

Program did not output anything!

--60.Find names and numbers of all customers with ratings equal to the maximum for their city.

Query:

SELECT c.CNAME, c.CNUM
FROM CUST c
WHERE c.RATING = (
    SELECT MAX(c2.RATING)
    FROM CUST c2
    WHERE c2.CITY = c.CITY
);

Output:

+----------+------+
| CNAME    | CNUM |
+----------+------+
| Giovanne | 2002 |
| Liu      | 2003 |
| Grass    | 2004 |
| Clemens  | 2006 |
+----------+------+

--61 Find all salespeople who have customers in their cities who they don’t service. ( Both way using Join and Correlated subquery.)

SELECT DISTINCT s.SNAME
FROM SALESPEOPLE s
JOIN CUST c ON s.CITY = c.CITY
WHERE s.SNUM <> c.SNUM;

OUTPUT:
+--------+
| SNAME  |
+--------+
| Motika |
| Peel   |
+--------+

--62 Extract cnum,cname and city from customer table if and only if one or more of the customers in the table are located in San Jose.

SELECT cnum, cname, city
FROM CUST
WHERE EXISTS (SELECT 1 FROM CUST WHERE city = 'San Jose');

OUTPUT:
+------+----------+----------+
| cnum | cname    | city     |
+------+----------+----------+
| 2001 | Hoffman  | London   |
| 2002 | Giovanne | Rome     |
| 2003 | Liu      | San Jose |
| 2004 | Grass    | Berlin   |
| 2006 | Clemens  | London   |
| 2007 | Pereira  | Rome     |
+------+----------+----------+

--63 Find salespeople no. who have multiple customers

SELECT SNUM
FROM CUST
GROUP BY SNUM
HAVING COUNT(CNUM) > 1;

OUTPUT:
+------+
| SNUM |
+------+
| 1002 |
+------+

--64 Find salespeople number, name and city who have multiple customers.

SELECT s.SNUM, s.SNAME, s.CITY
FROM SALESPEOPLE s
JOIN CUST c ON s.SNUM = c.SNUM
GROUP BY s.SNUM, s.SNAME, s.CITY
HAVING COUNT(c.CNUM) > 1;

OUTPUT:
+------+--------+----------+
| SNUM | SNAME  | CITY     |
+------+--------+----------+
| 1002 | Serres | San Jose |
+------+--------+----------+

--65 Find salespeople who serve only one customer.

SELECT s.SNUM, s.SNAME, s.CITY
FROM SALESPEOPLE s
JOIN CUST c ON s.SNUM = c.SNUM
GROUP BY s.SNUM, s.SNAME, s.CITY
HAVING COUNT(c.CNUM) = 1;

OUTPUT:
+------+---------+-----------+
| SNUM | SNAME   | CITY      |
+------+---------+-----------+
| 1001 | Peel    | London    |
| 1003 | Axelrod | New york  |
| 1007 | Rafkin  | Barcelona |
| 1004 | Motika  | London    |
+------+---------+-----------+

--66 Extract rows of all salespeople with more than one current order.

SELECT s.*
FROM SALESPEOPLE s
WHERE s.SNUM IN (
    SELECT SNUM
    FROM ORDERS
    GROUP BY SNUM
    HAVING COUNT(NUM) > 1
);

OUTPUT:
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    | 0.12 |
| 1002 | Serres | San Jose  | 0.13 |
| 1007 | Rafkin | Barcelona | 0.15 |
+------+--------+-----------+------+

--67 Find all salespeople who have customers with a rating of 300. (use EXISTS)

SELECT s.*
FROM SALESPEOPLE s
WHERE EXISTS (
    SELECT 1
    FROM CUST c
    WHERE c.SNUM = s.SNUM
      AND c.RATING = 300
);

OUTPUT:
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | San Jose  | 0.13 |
| 1007 | Rafkin | Barcelona | 0.15 |
+------+--------+-----------+------+

--68 Find all salespeople who have customers with a rating of 300. (use Join).

SELECT DISTINCT s.*
FROM SALESPEOPLE s
JOIN CUST c ON s.SNUM = c.SNUM
WHERE c.RATING = 300;

OUTPUT:
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | San Jose  | 0.13 |
| 1007 | Rafkin | Barcelona | 0.15 |
+------+--------+-----------+------+

--69 Select all salespeople with customers located in their cities who are not assigned to them. (use EXISTS).

SELECT s.*
FROM SALESPEOPLE s
WHERE EXISTS (
    SELECT 1
    FROM CUST c
    WHERE c.CITY = s.CITY
      AND c.SNUM <> s.SNUM
);

OUTPUT:
+------+--------+--------+------+
| SNUM | SNAME  | CITY   | COMM |
+------+--------+--------+------+
| 1001 | Peel   | London | 0.12 |
| 1004 | Motika | London | 0.11 |
+------+--------+--------+------+

--70 Extract from customers table every customer assigned the a salesperson who currently has at least one other customer ( besides the customer being selected) with orders in order table.

SELECT c1.*
FROM CUST c1
WHERE EXISTS (
    SELECT 1
    FROM CUST c2
    JOIN ORDERS o ON c2.CNUM = o.CNUM
    WHERE c2.SNUM = c1.SNUM
      AND c2.CNUM <> c1.CNUM
);

OUTPUT:
+------+-------+----------+--------+------+
| CNUM | CNAME | CITY     | RATING | SNUM |
+------+-------+----------+--------+------+
| 2004 | Grass | Berlin   |    100 | 1002 |
| 2003 | Liu   | San Jose |    300 | 1002 |
+------+-------+----------+--------+------+


--71.Find salespeople with customers located in their cities ( using both ANY and IN).
-- Using ANY:
-- Using ANY:

SELECT s.*
FROM SALESPEOPLE s
WHERE s.SNUM = ANY (
    SELECT c.SNUM
    FROM CUST c
    WHERE c.CITY = s.CITY
);

Output:

SNUM        SNAME                                              CITY                                               COMM  
----------- -------------------------------------------------- -------------------------------------------------- ------
       1001 Peel                                               London                                                .12
       1002 Serres                                             San Jose                                              .13

-- Using IN:
SELECT s.*
FROM SALESPEOPLE s
WHERE s.SNUM IN (
    SELECT c.SNUM
    FROM CUST c
    WHERE c.CITY = s.CITY
);

Output:

SNUM        SNAME                                              CITY                                               COMM  
----------- -------------------------------------------------- -------------------------------------------------- ------
       1001 Peel                                               London                                                .12
       1002 Serres                                             San Jose                                              .13


--72.Find all salespeople for whom there are customers that follow them in alphabetical order. (Using ANY and EXISTS)
-- Using ANY:

SELECT s1.*
FROM SALESPEOPLE s1
WHERE s1.SNAME = ANY (
    SELECT s2.SNAME
    FROM SALESPEOPLE s2
    JOIN CUST c ON s2.SNUM = c.SNUM
    WHERE s2.SNAME < c.CNAME
);

Output:

SNUM        SNAME                                              CITY                                               COMM  
----------- -------------------------------------------------- -------------------------------------------------- ------
       1003 Axelrod                                            New york                                              .10
       1004 Motika                                             London                                                .11

-- Using EXISTS:
SELECT s1.*
FROM SALESPEOPLE s1
WHERE EXISTS (
    SELECT 1
    FROM SALESPEOPLE s2
    JOIN CUST c ON s2.SNUM = c.SNUM
    WHERE s1.SNAME = s2.SNAME
      AND s2.SNAME < c.CNAME
);

Output:

SNUM        SNAME                                              CITY                                               COMM  
----------- -------------------------------------------------- -------------------------------------------------- ------
       1003 Axelrod                                            New york                                              .10
       1004 Motika                                             London                                                .11


--73.Select customers who have a greater rating than any customer in rome.

SELECT *
FROM CUST
WHERE RATING > ANY (SELECT RATING FROM CUST WHERE CITY = 'Rome');

Output:

CNUM        CNAME                                              CITY                                               RATING      SNUM       
----------- -------------------------------------------------- -------------------------------------------------- ----------- -----------
       2002 Giovanne                                           Rome                                                       200        1003
       2003 Liu                                                San Jose                                                   300        1002
       2006 Clemens                                            London                                                     300        1007



--74.Select all orders that had amounts that were greater that atleast one of the orders from Oct 6th.

SELECT *
FROM ORDERS
WHERE AMT > ANY (SELECT AMT FROM ORDERS WHERE ODATE = '1994-10-06');

Output:

ONUM        AMT          ODATE            CNUM        SNUM       
----------- ------------ ---------------- ----------- -----------
       3002      1900.10       1994-10-03        2007        1004
       3005      5160.45       1994-10-03        2003        1002
       3008      4723.00       1994-10-05        2006        1001
       3009      1713.23       1994-10-04        2002        1003
       3011      9891.88       1994-10-06        2006        1001


--75.Find all orders with amounts smaller than any amount for a customer in San Jose. (Both using ANY and without ANY)
-- Using ANY:

SELECT *
FROM ORDERS
WHERE AMT < ANY (
    SELECT AMT
    FROM ORDERS o
    JOIN CUST c ON o.CNUM = c.CNUM
    WHERE c.CITY = 'San Jose'
);

Output:

ONUM        AMT          ODATE            CNUM        SNUM       
----------- ------------ ---------------- ----------- -----------
       3001        18.69       1994-10-03        2008        1007
       3002      1900.10       1994-10-03        2007        1004
       3003       767.19       1994-10-03        2001        1001
       3006      1098.16       1994-10-04        2008        1007
       3007        75.75       1994-10-05        2004        1002
       3008      4723.00       1994-10-05        2006        1001
       3009      1713.23       1994-10-04        2002        1003
       3010      1309.95       1994-10-06        2004        1002
-- Without ANY (using subquery with MIN):
SELECT *
FROM ORDERS
WHERE AMT < (
    SELECT MIN(AMT)
    FROM ORDERS o
    JOIN CUST c ON o.CNUM = c.CNUM
    WHERE c.CITY = 'San Jose'
);

Output:

ONUM        AMT          ODATE            CNUM        SNUM       
----------- ------------ ---------------- ----------- -----------
       3001        18.69       1994-10-03        2008        1007
       3002      1900.10       1994-10-03        2007        1004
       3003       767.19       1994-10-03        2001        1001
       3006      1098.16       1994-10-04        2008        1007
       3007        75.75       1994-10-05        2004        1002
       3008      4723.00       1994-10-05        2006        1001
       3009      1713.23       1994-10-04        2002        1003
       3010      1309.95       1994-10-06        2004        1002

--76.Select those customers whose ratings are higher than every customer in Paris. ( Using both ALL and NOT EXISTS).
-- Using ALL:

SELECT *
FROM CUST
WHERE RATING > ALL (SELECT RATING FROM CUST WHERE CITY = 'Paris');
Output:

CNUM        CNAME                                              CITY                                               RATING      SNUM       
----------- -------------------------------------------------- -------------------------------------------------- ----------- -----------
       2001 Hoffman                                            London                                                     100        1001
       2002 Giovanne                                           Rome                                                       200        1003
       2003 Liu                                                San Jose                                                   300        1002
       2004 Grass                                              Berlin                                                     100        1002
       2006 Clemens                                            London                                                     300        1007
       2007 Pereira                                            Rome                                                       100        1004
-- Using NOT EXISTS:
SELECT c1.*
FROM CUST c1
WHERE NOT EXISTS (
    SELECT 1
    FROM CUST c2
    WHERE c2.CITY = 'Paris'
      AND c2.RATING >= c1.RATING
);

Output:

CNUM        CNAME                                              CITY                                               RATING      SNUM       
----------- -------------------------------------------------- -------------------------------------------------- ----------- -----------
       2001 Hoffman                                            London                                                     100        1001
       2002 Giovanne                                           Rome                                                       200        1003
       2003 Liu                                                San Jose                                                   300        1002
       2004 Grass                                              Berlin                                                     100        1002
       2006 Clemens                                            London                                                     300        1007
       2007 Pereira                                            Rome                                                       100        1004



--77.Select all customers whose ratings are equal to or greater than ANY of the Seeres

SELECT
    CNAME
FROM
    CUST
WHERE
    RATING >= (
        SELECT
            RATING
        FROM
            CUST
        WHERE
            CNAME = 'Liu' -- Assuming 'Seeres' was meant to be 'Liu'
    );

Output:

CNAME                                             
--------------------------------------------------
Liu                                               
Clemens     



--78.Find all salespeople who have no customers located in their city. ( Both using ANY and ALL)
-- Using NOT EXISTS (generally preferred)


SELECT
    s.SNAME
FROM
    SALESPEOPLE s
WHERE NOT EXISTS (
    SELECT 1
    FROM CUST c
    WHERE c.SNUM = s.SNUM AND c.CITY = s.CITY
);

Output:

SNAME                                             
--------------------------------------------------
Axelrod                                           
Motika                                            
Rafkin       

-- Using ANY (less efficient in some cases)
SELECT
    s.SNAME
FROM
    SALESPEOPLE s
WHERE
    s.SNUM = ANY (
        SELECT
            s.SNUM
        FROM
            SALESPEOPLE s
        WHERE
            NOT EXISTS (
                SELECT
                    1
                FROM
                    CUST c
                WHERE
                    c.SNUM = s.SNUM
                    AND c.CITY = s.CITY
            )
    );

Output:

SNAME                                             
--------------------------------------------------
Axelrod                                           
Motika                                            
Rafkin           

--79.Find all orders for amounts greater than any for the customers in London.

SELECT *
FROM ORDERS
WHERE AMT > ANY (
    SELECT o.AMT
    FROM ORDERS o
    JOIN CUST c ON o.CNUM = c.CNUM
    WHERE c.CITY = 'London'
);

Output:

ONUM        AMT          ODATE            CNUM        SNUM       
----------- ------------ ---------------- ----------- -----------
       3002      1900.10       1994-10-03        2007        1004
       3005      5160.45       1994-10-03        2003        1002
       3006      1098.16       1994-10-04        2008        1007
       3008      4723.00       1994-10-05        2006        1001
       3009      1713.23       1994-10-04        2002        1003
       3010      1309.95       1994-10-06        2004        1002
       3011      9891.88       1994-10-06        2006        1001

--80.Find all salespeople and customers located in london.

SELECT
    SNAME,
    'Salesperson' AS Type,
    CITY
FROM
    SALESPEOPLE
WHERE
    CITY = 'London'

UNION ALL

SELECT
    CNAME,
    'Customer' AS Type,
    CITY
FROM
    CUST
WHERE
    CITY = 'London';


Output:

SNAME                                              Type        CITY                                              
-------------------------------------------------- ----------- -------------------------------
Peel                                               Salesperson London                                            
Motika                                             Salesperson London                                            
Hoffman                                            Customer    London                                            
Clemens                                            Customer    London


--81.For every salesperson, dates on which highest and lowest orders were brought.

SELECT
    s.SNAME,
    (SELECT ODATE FROM ORDERS WHERE SNUM = s.SNUM ORDER BY AMT DESC LIMIT 1) AS HighestOrderDate,
    (SELECT ODATE FROM ORDERS WHERE SNUM = s.SNUM ORDER BY AMT ASC LIMIT 1) AS LowestOrderDate
FROM
    SALESPEOPLE s;

Output:

SNAME                                              HighestOrderDate LowestOrderDate 
-------------------------------------------------- ---------------- ----------------
Peel                                                     1994-10-06       1994-10-03
Serres                                                   1994-10-03       1994-10-05
Axelrod                                                  1994-10-04       1994-10-04
Motika                                                   1994-10-03       1994-10-03
Rafkin                                                   1994-10-04       1994-10-03


--82.List all of the salespeople and indicate those who don’t have customers in their cities as well as those who do have.

SELECT
    s.SNAME,
    s.CITY,
    CASE
        WHEN c.CNAME IS NULL THEN 'No Customers in City'
        ELSE 'Has Customers in City'
    END AS CustomerStatus
FROM
    SALESPEOPLE s
LEFT JOIN
    CUST c ON s.SNUM = c.SNUM AND s.CITY = c.CITY;

Output:

SNAME                                              CITY                                               CustomerStatus       
-------------------------------------------------- -------------------------------------------------- ---------------------
Peel                                               London                                             Has Customers in City
Serres                                             San Jose                                           Has Customers in City
Axelrod                                            New york                                           No Customers in City 
Motika                                             London                                             No Customers in City 
Rafkin                                             Barcelona                                          No Customers in City 

--83.Append strings to the selected fields, indicating weather or not a given salesperson was matched to a customer in his city.

SELECT
    s.SNAME,
    s.CITY AS SalespersonCity,
    c.CNAME AS CustomerName,
    c.CITY AS CustomerCity,
    CASE
        WHEN s.CITY = c.CITY THEN 'Matched'
        ELSE 'Not Matched'
    END AS CityMatch
FROM
    SALESPEOPLE s
LEFT JOIN
    CUST c ON s.SNUM = c.SNUM;
Output:
SNAME                                              SalespersonCity                                    CustomerName                                       CustomerCity                                       CityMatch  
-------------------------------------------------- -------------------------------------------------- -------------------------------------------------- -------------------------------------------------- -----------
Peel                                               London                                             Hoffman                                            London                                             Matched    
Serres                                             San Jose                                           Liu                                                San Jose                                           Matched    
Serres                                             San Jose                                           Grass                                              Berlin                                             Not Matched
Axelrod                                            New york                                           Giovanne                                           Rome                                               Not Matched
Motika                                             London                                             Pereira                                            Rome                                               Not Matched
Rafkin                                             Barcelona                                          Clemens                                            London                                             Not Matched


--84.Create a union of two queries that shows the names, cities and ratings of all customers. Those with a rating of 200 or greater will also have the words ‘High Rating’, while the others will have the words ‘Low Rating’.

SELECT CNAME, CITY, RATING, 'High Rating' AS Rating_Category
FROM CUST
WHERE RATING >= 200

UNION

SELECT CNAME, CITY, RATING, 'Low Rating' AS Rating_Category
FROM CUST
WHERE RATING < 200;

Output:

CNAME                                              CITY                                               RATING      Rating_Category
-------------------------------------------------- -------------------------------------------------- ----------- ---------------
Clemens                                            London                                                     300 High Rating    
Giovanne                                           Rome                                                       200 High Rating    
Grass                                              Berlin                                                     100 Low Rating     
Hoffman                                            London                                                     100 Low Rating     
Liu                                                San Jose                                                   300 High Rating    
Pereira                                            Rome                                                       100 Low Rating     
--85.Write command that produces the name and number of each salesperson and each customer with more than one current order. Put the result in alphabetical order.
SELECT SNAME AS Name, SNUM AS Number
FROM SALESPEOPLE
WHERE SNUM IN (SELECT SNUM FROM ORDERS GROUP BY SNUM HAVING COUNT(*) > 1)

UNION

SELECT CNAME AS Name, CNUM AS Number
FROM CUST
WHERE CNUM IN (SELECT CNUM FROM ORDERS GROUP BY CNUM HAVING COUNT(*) > 1)

ORDER BY Name;

Output:

Name                                               Number     
-------------------------------------------------- -----------
Clemens                                                   2006
Grass                                                     2004
Peel                                                      1001
Rafkin                                                    1007
Serres                                                    1002


--86.Form a union of three queries. Have the first select the snums of all salespeople in San Jose, then second the cnums of all customers in San Jose and the third the onums of all orders on Oct. 3. Retain duplicates between the last two queries, but eliminates and redundancies between either of them and the first.

SELECT SNUM
FROM SALESPEOPLE
WHERE CITY = 'San Jose'

UNION

SELECT CNUM
FROM CUST
WHERE CITY = 'San Jose'

UNION ALL

SELECT ONUM
FROM ORDERS
WHERE ODATE = '1994-10-03';
Output:

Name                                               Number     
-------------------------------------------------- -----------
Clemens                                                   2006
Grass                                                     2004
Peel                                                      1001
Rafkin                                                    1007
Serres                                                    1002

--87.Produce all the salesperson in London who had at least one customer there.

SELECT s.SNAME
FROM SALESPEOPLE s
WHERE s.CITY = 'London'
AND s.SNUM IN (SELECT c.SNUM FROM CUST c WHERE c.CITY = 'London');

Output:

SNAME                                             
--------------------------------------------------
Peel            

--88.Produce all the salesperson in London who did not have customers there.

SELECT s.SNAME
FROM SALESPEOPLE s
WHERE s.CITY = 'London'
AND s.SNUM NOT IN (SELECT c.SNUM FROM CUST c WHERE c.CITY = 'London');

Output:

SNAME                                             
--------------------------------------------------
Motika      

--89.We want to see salespeople matched to their customers without excluding those salesperson who were not currently assigned to any customers. (User OUTER join and UNION)
-- Using LEFT OUTER JOIN to get all salespeople and their matching customers, including those without customers.

SELECT s.SNAME, c.CNAME
FROM SALESPEOPLE s
LEFT OUTER JOIN CUST c ON s.SNUM = c.SNUM;

Output:

SNAME                                              CNAME                                             
-------------------------------------------------- --------------------------------------------------
Peel                                               Hoffman                                           
Serres                                             Liu                                               
Serres                                             Grass                                             
Axelrod                                            Giovanne                                          
Motika                                             Pereira                                           
Rafkin                                             Clemens